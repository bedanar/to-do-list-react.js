[{"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\index.js":"1","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\App.js":"2","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\Forms.js":"4","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\To-do-list.js":"5","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\ToDo.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1509,"mtime":1609879876353,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1211,"mtime":1609879014002,"results":"11","hashOfConfig":"8"},{"size":456,"mtime":1609878661311,"results":"12","hashOfConfig":"8"},{"size":978,"mtime":1609879604691,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"xrirzj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\index.js",[],["30","31"],"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\App.js",["32","33"],"import React, {useState, useEffect} from 'react';\nimport Form from './components/Forms';\nimport './App.css'\nimport ToDoList from './components/To-do-list'\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\nconst FilterHandler = () => {\n  switch (status) {\n    case \"completed\":\n      setFilteredTodos(todos.filter(todo => todo.completed === true));\n      break;\n    case \"uncompleted\":\n      setFilteredTodos(todos.filter(todo => todo.completed === false));\n      break;\n    default:\n      setFilteredTodos(todos);\n      break;\n  }\n}\nuseEffect((() => {\n  FilterHandler()\n}), [todos, status])\nuseEffect((()=>{\n  getLocalTodos()\n}), [])\nconst saveLocalTodos = () => {\n  localStorage.setItem('todos', JSON.stringify([]))\n}\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]))\n  }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal)\n  }\n}\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Nafisa's to-do list</h1>\n      </header>\n      <Form setInputText={setInputText} \n      setTodos={setTodos} \n      todos={todos} \n      inputText={inputText}\n      setStatus={setStatus} \n      />\n      <ToDoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\Forms.js",[],"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\To-do-list.js",[],"C:\\Users\\User\\Desktop\\React JS\\chat-react\\src\\components\\ToDo.jsx",["34"],"import React, { useEffect } from 'react'\r\n\r\nconst ToDo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todos.id))\r\n    }\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id){\r\n                return(\r\n                    {...item, completed: !item.completed}\r\n                )\r\n            }else{\r\n                return item\r\n            }\r\n        }))\r\n    }\r\n    \r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\" }`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick = {deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":27,"column":5,"nodeType":"43","endLine":27,"endColumn":20,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":31,"column":7,"nodeType":"47","messageId":"48","endLine":31,"endColumn":21},{"ruleId":"45","severity":1,"message":"49","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"37","replacedBy":"50"},{"ruleId":"39","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'FilterHandler'. Either include it or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'saveLocalTodos' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["52"],["53"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [todos, status, FilterHandler]",{"range":"57","text":"58"},[740,755],"[todos, status, FilterHandler]"]